<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-section set-bg" data-setbg="img/breadcrumb.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Giỏ hàng</h2>
                    <div class="breadcrumb__option">
                        <a href="/">Trang chủ</a>
                        <span>Shopping Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Shoping Cart Section Begin -->
<style>
    .shoping__cart__item img {
        max-width: 100px;
        max-height: 100px;
        object-fit: contain;
        margin-right: 15px;
    }
    .product-link {
        color: #333;
        transition: color 0.3s ease;
    }
    .product-link:hover {
        color: #7fad39;
        text-decoration: underline;
    }
</style>

<!-- CSRF token hidden -->
<input type="hidden" id="csrfToken" name="_csrf" value="{{csrfToken}}">

<section class="shoping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th class="shoping__product">Sản phẩm</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Tổng</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="cartItemsContainer">
                            {{#each cartItems}}
                            <tr data-item-id="{{this._id}}">
                                <td class="shoping__cart__item">
                                    <img src="{{this.thumbnail}}" alt="{{this.title}}" />
                                    <h5><a href="/product/{{this.slug}}" class="product-link">{{this.title}}</a></h5>
                                </td>
                                <td class="shoping__cart__price" data-price="{{this.sellPrice}}">
                                    {{formatCurrency this.sellPrice}}
                                </td>
                                <td class="shoping__cart__quantity">
                                    <div class="pro-qty">
                                        <input type="text" value="{{this.quantity}}" class="item-quantity"
                                            data-item-id="{{this._id}}">
                                    </div>
                                </td>
                                <td class="shoping__cart__total" data-item-id="{{this._id}}">
                                    {{formatCurrency this.total}}
                                </td>
                                <td class="shoping__cart__item__close">
                                    <span class="icon_close remove-item" data-item-id="{{this._id}}"></span>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__btns">
                    <a href="/" class="primary-btn cart-btn-right">TIẾP TỤC MUA SẮM</a>
                </div>
            </div>

            <!-- Mã giảm giá -->
            <div class="col-lg-6">
                <div class="shoping__continue">
                    <div class="shoping__discount">
                        <h5>Mã giảm giá</h5>
                        <form id="discountForm" action="/cart/apply-discount" method="POST">
                            <input type="hidden" name="_csrf" value="{{csrfToken}}">
                            <input type="text" name="discountCode" placeholder="Nhập mã giảm giá" required>
                            <button type="submit" class="site-btn">ÁP DỤNG</button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Tổng cộng -->
            <div class="col-lg-6">
                <div class="shoping__checkout">
                    <h5>TỔNG CỘNG</h5>
                    <ul>
                        <li>Tạm tính<span id="subtotal">{{formatCurrency subtotal}}</span></li>
                        <li>Tổng <span id="total">{{formatCurrency subtotal}}</span></li>
                    </ul>
                    <form action="/order/checkout" method="POST">
                        <input type="hidden" name="_csrf" value="{{csrfToken}}">
                        <button type="submit" class="primary-btn">THANH TOÁN</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shoping Cart Section End -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- CSRF token hidden -->
<input type="hidden" id="csrfToken" name="_csrf" value="{{csrfToken}}">

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Lấy CSRF token
    const csrfToken = document.querySelector('input[name="_csrf"]')?.value;

    // --- Hàm update số lượng sản phẩm ---
    async function updateCartItemQuantity(itemId, quantity) {
        try {
            const res = await fetch(`/cart/update/${itemId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `_csrf=${encodeURIComponent(csrfToken)}&quantity=${quantity}`,
                credentials: 'include' // gửi cookie session
            });
            const data = await res.json();

            if (data.success) {
                // Cập nhật tổng tiền sản phẩm
                const totalEl = document.querySelector(`.shoping__cart__total[data-item-id="${itemId}"]`);
                if (totalEl) totalEl.textContent = new Intl.NumberFormat('vi-VN').format(data.itemTotal) + ' đ';

                // Cập nhật tổng tiền giỏ hàng
                const subtotalEl = document.getElementById('subtotal');
                const totalEl2 = document.getElementById('total');
                if (subtotalEl) subtotalEl.textContent = new Intl.NumberFormat('vi-VN').format(data.subtotal) + ' đ';
                if (totalEl2) totalEl2.textContent = new Intl.NumberFormat('vi-VN').format(data.subtotal) + ' đ';

                // Cập nhật số lượng giỏ hàng trên header
                updateHeaderCartCount(data.cartCount);
            } else {
                Swal.fire('Lỗi!', data.message, 'error');
            }
        } catch (err) {
            console.error(err);
            Swal.fire('Lỗi!', 'Đã xảy ra lỗi khi cập nhật số lượng', 'error');
        }
    }

    // --- Hàm xóa sản phẩm ---
    function removeCartItem(itemId) {
        Swal.fire({
            title: 'Xác nhận',
            text: 'Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then(result => {
            if (result.isConfirmed) {
                // Tạo form động với CSRF token
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/cart/remove/${itemId}`;

                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name = '_csrf';
                csrfInput.value = csrfToken;

                form.appendChild(csrfInput);
                document.body.appendChild(form);
                form.submit();
            }
        });
    }

    // --- Hàm cập nhật số lượng giỏ hàng trên header ---
    function updateHeaderCartCount(count) {
        const cartCountEl = document.querySelector('.header__cart ul li:nth-child(2) span');
        if (cartCountEl) cartCountEl.textContent = count;
    }

    // --- Gắn sự kiện thay đổi số lượng ---
    document.querySelectorAll('.item-quantity').forEach(input => {
        const itemId = input.dataset.itemId;

        input.addEventListener('change', () => {
            let newValue = parseInt(input.value);
            if (isNaN(newValue) || newValue < 1) {
                newValue = 1;
                input.value = newValue;
            }
            updateCartItemQuantity(itemId, newValue);
        });
    });

    // --- Gắn sự kiện click xóa ---
    document.querySelectorAll('.remove-item').forEach(btn => {
        const itemId = btn.dataset.itemId;
        btn.addEventListener('click', () => removeCartItem(itemId));
    });

    // --- Nếu bạn có nút tăng/giảm từ plugin .pro-qty ---
    document.querySelectorAll('.qtybtn').forEach(btn => {
        btn.addEventListener('click', () => {
            setTimeout(() => {
                const input = btn.closest('.pro-qty').querySelector('input.item-quantity');
                const itemId = input.dataset.itemId;
                const newValue = parseInt(input.value);
                if (!isNaN(newValue) && newValue >= 1) {
                    updateCartItemQuantity(itemId, newValue);
                }
            }, 50);
        });
    });
});
</script>