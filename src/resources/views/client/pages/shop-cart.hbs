<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-section set-bg" data-setbg="img/breadcrumb.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Giỏ hàng</h2>
                    <div class="breadcrumb__option">
                        <a href="/">Trang chủ</a>
                        <span>Shopping Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Shoping Cart Section Begin -->
<style>
    .shoping__cart__item img {
        max-width: 100px;
        max-height: 100px;
        object-fit: contain;
        margin-right: 15px;
    }
    .product-link {
        color: #333;
        transition: color 0.3s ease;
    }
    .product-link:hover {
        color: #7fad39;
        text-decoration: underline;
    }
</style>
<input type="hidden" id="csrfToken" value="{{csrfToken}}">
<section class="shoping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th class="shoping__product">Sản phẩm</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Tổng</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="cartItemsContainer">
                            {{#each cartItems}}
                            <tr data-item-id="{{this._id}}">
                                <td class="shoping__cart__item">
                                    <img src="{{this.thumbnail}}" alt="{{this.title}}" />
                                    <h5><a href="/product/{{this.slug}}" class="product-link">{{this.title}}</a></h5>
                                </td>
                                <td class="shoping__cart__price" data-price="{{this.sellPrice}}">
                                    {{formatCurrency this.sellPrice}}
                                </td>
                                <td class="shoping__cart__quantity">
                                    <div class="pro-qty">
                                        <input type="text" value="{{this.quantity}}" class="item-quantity"
                                            data-item-id="{{this._id}}">
                                    </div>
                                </td>
                                <td class="shoping__cart__total" data-item-id="{{this._id}}">
                                    {{formatCurrency this.total}}
                                </td>
                                <td class="shoping__cart__item__close">
                                    <span class="icon_close remove-item" data-item-id="{{this._id}}"></span>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__btns">
                    <a href="/" class="primary-btn cart-btn-right">TIẾP TỤC MUA SẮM</a>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="shoping__continue">
                    <div class="shoping__discount">
                        <h5>Mã giảm giá</h5>
                        <form action="#">
                            <input type="text" placeholder="Nhập mã giảm giá">
                            <button type="submit" class="site-btn">ÁP DỤNG</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="shoping__checkout">
                    <h5>TỔNG CỘNG</h5>
                    <ul>
                        <li>Tạm tính<span id="subtotal">{{formatCurrency subtotal}}</span></li>
                        <li>Tổng <span id="total">{{formatCurrency subtotal}}</span></li>
                    </ul>
                    <a href="/order/checkout" class="primary-btn">THANH TOÁN</a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shoping Cart Section End -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const csrfToken = document.getElementById('csrfToken').value;
    document.addEventListener('DOMContentLoaded', function () {
        // Xóa bỏ phần tạo nút tăng/giảm thủ công và sử dụng nút từ main.js
        const qtyInputs = document.querySelectorAll('.item-quantity');
        qtyInputs.forEach(input => {
            const itemId = input.getAttribute('data-item-id');

            // Lắng nghe sự kiện thay đổi input
            input.addEventListener('change', function () {
                let newValue = parseInt(this.value);

                // Đảm bảo giá trị hợp lệ
                if (isNaN(newValue) || newValue < 1) {
                    newValue = 1;
                    this.value = newValue;
                }

                updateCartItemQuantity(itemId, newValue);
            });
        });
        
        // Lắng nghe sự kiện click trên nút tăng/giảm số lượng
        const qtyButtons = document.querySelectorAll('.qtybtn');
        qtyButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Chờ 50ms để giá trị input được cập nhật từ main.js
                setTimeout(() => {
                    const input = this.closest('.pro-qty').querySelector('input');
                    const itemId = input.getAttribute('data-item-id');
                    const newValue = parseInt(input.value);
                    
                    if (!isNaN(newValue) && newValue >= 1) {
                        updateCartItemQuantity(itemId, newValue);
                    }
                }, 50);
            });
        });

        // Xử lý sự kiện khi nhấn nút xóa
        const removeButtons = document.querySelectorAll('.remove-item');
        removeButtons.forEach(btn => {
            btn.addEventListener('click', function () {
                const itemId = this.getAttribute('data-item-id');
                removeCartItem(itemId);
            });
        });

        // Hàm cập nhật số lượng sản phẩm
        function updateCartItemQuantity(itemId, quantity) {
            fetch(`/cart/update/${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-Token': csrfToken // gửi token qua header
                },
                body: `quantity=${quantity}&_csrf=${encodeURIComponent(csrfToken)}` // hoặc gửi trong body
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Cập nhật tổng tiền của sản phẩm
                    const totalElement = document.querySelector(`.shoping__cart__total[data-item-id="${itemId}"]`);
                    if (totalElement) {
                        const itemTotal = parseFloat(data.itemTotal) || 0;
                        totalElement.textContent = new Intl.NumberFormat('vi-VN').format(itemTotal) + ' đ';
                    }

                    // Cập nhật tổng tiền của giỏ hàng
                    const subtotalElement = document.getElementById('subtotal');
                    const totalElement2 = document.getElementById('total');
                    if (subtotalElement) {
                        const subtotal = parseFloat(data.subtotal) || 0;
                        subtotalElement.textContent = new Intl.NumberFormat('vi-VN').format(subtotal) + ' đ';
                    }
                    if (totalElement2) {
                        const subtotal = parseFloat(data.subtotal) || 0;
                        totalElement2.textContent = new Intl.NumberFormat('vi-VN').format(subtotal) + ' đ';
                    }

                    // Cập nhật số lượng sản phẩm trong header
                    updateHeaderCartCount(data.cartCount);
                } else {
                    Swal.fire({
                        title: 'Lỗi!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'Đóng'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Đã xảy ra lỗi khi cập nhật số lượng',
                    icon: 'error',
                    confirmButtonText: 'Đóng'
                });
            });
        }


        // Hàm xóa sản phẩm khỏi giỏ hàng
        function removeCartItem(itemId) {
            Swal.fire({
                title: 'Xác nhận',
                text: 'Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Tạo form động với CSRF token
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = `/cart/remove/${itemId}`;

                    const csrfInput = document.createElement('input');
                    csrfInput.type = 'hidden';
                    csrfInput.name = '_csrf';
                    csrfInput.value = csrfToken;

                    form.appendChild(csrfInput);
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }


        // Hàm cập nhật số lượng sản phẩm trong header
        function updateHeaderCartCount(count) {
            const cartCountElement = document.querySelector('.header__cart ul li:nth-child(2) span');
            if (cartCountElement) {
                cartCountElement.textContent = count;
            }
        }
    });
</script>